{"uid":"f29d9fde4c9e9846","name":"Step 3: Compare file1.csv with file2.csv","fullName":"test_export_csv#test_compare_exported_csvs","historyId":"6b4b1652274a6646e5d64ad03e7d46a2","time":{"start":1751362886815,"stop":1751362886818,"duration":3},"description":"Validate that both exported CSV files have matching data rows","descriptionHtml":"<p>Validate that both exported CSV files have matching data rows</p>\n","status":"failed","statusMessage":"AssertionError: CSVs differ\nassert not [{'ID': '4', 'Name': 'Date', 'Price': '80'}, {'ID': '5', 'Name': 'Elderberry', 'Price': '120'}]","statusTrace":"@allure.title(\"Step 3: Compare file1.csv with file2.csv\")\n    @allure.feature(\"CSV Comparison\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"Validate that both exported CSV files have matching data rows\")\n    def test_compare_exported_csvs():\n        file1 = os.path.join(EXPORT_DIR, \"file1.csv\")\n        file2 = os.path.join(EXPORT_DIR, \"file2.csv\")\n>       compare_csvs(file1, file2)\n\ntest_export_csv.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfile1 = 'exports\\\\file1.csv', file2 = 'exports\\\\file2.csv'\n\n    @allure.step(\"Compare CSVs: {file1} vs {file2}\")\n    def compare_csvs(file1, file2):\n        data1 = read_csv(file1)\n        data2 = read_csv(file2)\n    \n        diff_rows = [row for row in data1 if row not in data2]\n    \n        allure.attach(f\"{len(data1)} rows in {file1}\\n{len(data2)} rows in {file2}\", name=\"Row Count Comparison\", attachment_type=allure.attachment_type.TEXT)\n    \n        if diff_rows:\n            diff_text = \"\\n\".join([str(row) for row in diff_rows])\n            allure.attach(diff_text, name=\"Mismatched Rows\", attachment_type=allure.attachment_type.TEXT)\n    \n>       assert not diff_rows, \"CSVs differ\"\nE       AssertionError: CSVs differ\nE       assert not [{'ID': '4', 'Name': 'Date', 'Price': '80'}, {'ID': '5', 'Name': 'Elderberry', 'Price': '120'}]\n\ntest_export_csv.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1751362886709,"stop":1751362886792,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1751362886793,"stop":1751362886793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"_verify_url","time":{"start":1751362886793,"stop":1751362886793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1751362886793,"stop":1751362886793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"base_url","time":{"start":1751362886793,"stop":1751362886793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"Validate that both exported CSV files have matching data rows","status":"failed","statusMessage":"AssertionError: CSVs differ\nassert not [{'ID': '4', 'Name': 'Date', 'Price': '80'}, {'ID': '5', 'Name': 'Elderberry', 'Price': '120'}]","statusTrace":"@allure.title(\"Step 3: Compare file1.csv with file2.csv\")\n    @allure.feature(\"CSV Comparison\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\"Validate that both exported CSV files have matching data rows\")\n    def test_compare_exported_csvs():\n        file1 = os.path.join(EXPORT_DIR, \"file1.csv\")\n        file2 = os.path.join(EXPORT_DIR, \"file2.csv\")\n>       compare_csvs(file1, file2)\n\ntest_export_csv.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfile1 = 'exports\\\\file1.csv', file2 = 'exports\\\\file2.csv'\n\n    @allure.step(\"Compare CSVs: {file1} vs {file2}\")\n    def compare_csvs(file1, file2):\n        data1 = read_csv(file1)\n        data2 = read_csv(file2)\n    \n        diff_rows = [row for row in data1 if row not in data2]\n    \n        allure.attach(f\"{len(data1)} rows in {file1}\\n{len(data2)} rows in {file2}\", name=\"Row Count Comparison\", attachment_type=allure.attachment_type.TEXT)\n    \n        if diff_rows:\n            diff_text = \"\\n\".join([str(row) for row in diff_rows])\n            allure.attach(diff_text, name=\"Mismatched Rows\", attachment_type=allure.attachment_type.TEXT)\n    \n>       assert not diff_rows, \"CSVs differ\"\nE       AssertionError: CSVs differ\nE       assert not [{'ID': '4', 'Name': 'Date', 'Price': '80'}, {'ID': '5', 'Name': 'Elderberry', 'Price': '120'}]\n\ntest_export_csv.py:43: AssertionError","steps":[{"name":"Compare CSVs: 'exports\\file1.csv' vs 'exports\\file2.csv'","time":{"start":1751362886815,"stop":1751362886818,"duration":3},"status":"failed","statusMessage":"AssertionError: CSVs differ\nassert not [{'ID': '4', 'Name': 'Date', 'Price': '80'}, {'ID': '5', 'Name': 'Elderberry', 'Price': '120'}]\n","statusTrace":"  File \"C:\\Users\\artee.gorde_infobean\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\artee.gorde_infobean\\PycharmProjects\\Csv_comparison\\tests\\test_export_csv.py\", line 43, in compare_csvs\n    assert not diff_rows, \"CSVs differ\"\n","steps":[{"name":"Read CSV: 'exports\\file1.csv'","time":{"start":1751362886815,"stop":1751362886815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"file_path","value":"'exports\\file1.csv'"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false},{"name":"Read CSV: 'exports\\file2.csv'","time":{"start":1751362886815,"stop":1751362886815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"file_path","value":"'exports\\file2.csv'"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"741f8b08aa82d74d","name":"Row Count Comparison","source":"741f8b08aa82d74d.txt","type":"text/plain","size":55},{"uid":"4aaf33224a3067ba","name":"Mismatched Rows","source":"4aaf33224a3067ba.txt","type":"text/plain","size":92}],"parameters":[{"name":"file1","value":"'exports\\file1.csv'"},{"name":"file2","value":"'exports\\file2.csv'"}],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":2,"attachmentStep":false}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":3,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"CSV Comparison"},{"name":"severity","value":"critical"},{"name":"suite","value":"test_export_csv"},{"name":"host","value":"IB-BNR-LAP-241"},{"name":"thread","value":"37408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_export_csv"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"f29d9fde4c9e9846.json","parameterValues":[]}